[{"/Users/samarthajadhao/Desktop/2FactorAuthentication-TOTP/client/src/index.js":"1","/Users/samarthajadhao/Desktop/2FactorAuthentication-TOTP/client/src/Components/login.js":"2","/Users/samarthajadhao/Desktop/2FactorAuthentication-TOTP/client/src/Components/register.js":"3","/Users/samarthajadhao/Desktop/2FactorAuthentication-TOTP/client/src/App.js":"4","/Users/samarthajadhao/Desktop/2FactorAuthentication-TOTP/client/src/Components/tfa.js":"5"},{"size":415,"mtime":1648443051411,"results":"6","hashOfConfig":"7"},{"size":1512,"mtime":1648442809727,"results":"8","hashOfConfig":"7"},{"size":1830,"mtime":1648443469360,"results":"9","hashOfConfig":"7"},{"size":655,"mtime":1648445052867,"results":"10","hashOfConfig":"7"},{"size":1440,"mtime":1648450014284,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"16"},"1xp2g14",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},"/Users/samarthajadhao/Desktop/2FactorAuthentication-TOTP/client/src/index.js",["32","33","34","35","36","37"],[],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport Login from \"./Components/login\";\nimport Register from \"./Components/register\";\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  useNavigate,\n} from \"react-router-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById(\"root\")\n);\n",["38","39"],"/Users/samarthajadhao/Desktop/2FactorAuthentication-TOTP/client/src/Components/login.js",["40","41","42","43","44"],[],"/Users/samarthajadhao/Desktop/2FactorAuthentication-TOTP/client/src/Components/register.js",["45","46","47","48","49","50"],[],"import { React, useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport { Button, FormControl, InputGroup } from \"react-bootstrap\";\nimport { Link, withRouter, useLocation } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Login from \"../Components/login\";\n\nfunction Register({ navigate }) {\n  const [Email, setEmail] = useState(\"sample@gmail.com\");\n  const [Password, setPassword] = useState(\"Password\");\n  const handleSubmit = async () => {\n    // e.preventDefault();\n    const { status } = await axios.post(\"http://localhost:4000/register\", {\n      uemail: Email,\n      upassword: Password,\n    });\n\n    console.log(status);\n    if (status == 200) {\n      console.log(\"User has been successfully Registered!\");\n      console.log(Email);\n      window.location.href = \"/tfa\";\n    }\n  };\n\n  return (\n    <div>\n      <Form className=\"Login-form text-center\">\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n          <Form.Label> Email address</Form.Label>\n          <Form.Control\n            type=\"email\"\n            value={Email}\n            onChange={(e) => {\n              setEmail(e.target.value);\n            }}\n          />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            value={Password}\n            onChange={(e) => {\n              setPassword(e.target.value);\n            }}\n          />\n        </Form.Group>\n\n        <Button variant=\"primary\" type=\"submit\" onClick={handleSubmit}>\n          Submit\n        </Button>\n\n        <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\n          Already a User <Link to=\"/login\">Login here</Link>\n        </Form.Group>\n      </Form>\n    </div>\n  );\n}\nexport default Register;\n","/Users/samarthajadhao/Desktop/2FactorAuthentication-TOTP/client/src/App.js",["51","52"],[],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport Login from \"./Components/login\";\nimport Register from \"./Components/register\";\nimport Tfa from \"./Components/tfa\";\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  useNavigate,\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div>\n      <Router>\n        <Routes>\n          <Route path=\"/login\" element={<Login />} />\n          <Route path=\"/register\" element={<Register />} />\n          <Route path=\"/tfa\" element={<Tfa />} />\n        </Routes>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/samarthajadhao/Desktop/2FactorAuthentication-TOTP/client/src/Components/tfa.js",["53","54","55","56"],[],"import { React, useState, useEffect } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport { Button, FormControl, InputGroup } from \"react-bootstrap\";\n// import { useHistory, Link, withRouter } from \"react-router-dom\";\nimport axios from \"axios\";\n\nfunction Tfa() {\n  const [Image, setImage] = useState(\"#\");\n  const [Code, setCode] = useState(\"\");\n\n  useEffect(() => {\n    preLoad();\n    //     console.log(Image);\n  }, []);\n\n  async function preLoad() {\n    const res = await axios.post(\"http://localhost:4000/tfa/setup\");\n    //     console.log(res.data.dataURL);\n    if (res.status == 200) {\n      setImage(String(res.data.dataURL));\n    }\n  }\n\n  async function handleClick() {\n    const res = await axios.post(\"http://localhost:4000/tfa/verify\", {\n      token: Code,\n    });\n\n    console.log(res);\n  }\n\n  //   async function handleClick() {}\n\n  return (\n    <div>\n      <div className=\"text-center\">\n        <img src={Image} />\n      </div>\n      <Form className=\"text-center\">\n        <Form.Group\n          className=\"mb-3\"\n          controlId=\"formBasicEmail\"\n          value={Code}\n          onChange={(e) => {\n            setCode(e.target.value);\n          }}\n        >\n          <Form.Label>Enter Code</Form.Label>\n          <Form.Control />\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\" onClick={handleClick}>\n          Submit\n        </Button>\n      </Form>\n    </div>\n  );\n}\n\nexport default Tfa;\n",{"ruleId":"57","severity":1,"message":"58","line":5,"column":8,"nodeType":"59","messageId":"60","endLine":5,"endColumn":13},{"ruleId":"57","severity":1,"message":"61","line":6,"column":8,"nodeType":"59","messageId":"60","endLine":6,"endColumn":16},{"ruleId":"57","severity":1,"message":"62","line":8,"column":20,"nodeType":"59","messageId":"60","endLine":8,"endColumn":26},{"ruleId":"57","severity":1,"message":"63","line":9,"column":3,"nodeType":"59","messageId":"60","endLine":9,"endColumn":9},{"ruleId":"57","severity":1,"message":"64","line":10,"column":3,"nodeType":"59","messageId":"60","endLine":10,"endColumn":8},{"ruleId":"57","severity":1,"message":"65","line":11,"column":3,"nodeType":"59","messageId":"60","endLine":11,"endColumn":14},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"57","severity":1,"message":"70","line":3,"column":18,"nodeType":"59","messageId":"60","endLine":3,"endColumn":29},{"ruleId":"57","severity":1,"message":"71","line":3,"column":31,"nodeType":"59","messageId":"60","endLine":3,"endColumn":41},{"ruleId":"57","severity":1,"message":"72","line":4,"column":10,"nodeType":"59","messageId":"60","endLine":4,"endColumn":20},{"ruleId":"57","severity":1,"message":"73","line":4,"column":28,"nodeType":"59","messageId":"60","endLine":4,"endColumn":38},{"ruleId":"74","severity":1,"message":"75","line":17,"column":16,"nodeType":"76","messageId":"77","endLine":17,"endColumn":18},{"ruleId":"57","severity":1,"message":"70","line":3,"column":18,"nodeType":"59","messageId":"60","endLine":3,"endColumn":29},{"ruleId":"57","severity":1,"message":"71","line":3,"column":31,"nodeType":"59","messageId":"60","endLine":3,"endColumn":41},{"ruleId":"57","severity":1,"message":"73","line":4,"column":16,"nodeType":"59","messageId":"60","endLine":4,"endColumn":26},{"ruleId":"57","severity":1,"message":"78","line":4,"column":28,"nodeType":"59","messageId":"60","endLine":4,"endColumn":39},{"ruleId":"57","severity":1,"message":"58","line":6,"column":8,"nodeType":"59","messageId":"60","endLine":6,"endColumn":13},{"ruleId":"74","severity":1,"message":"75","line":19,"column":16,"nodeType":"76","messageId":"77","endLine":19,"endColumn":18},{"ruleId":"57","severity":1,"message":"79","line":2,"column":8,"nodeType":"59","messageId":"60","endLine":2,"endColumn":16},{"ruleId":"57","severity":1,"message":"65","line":12,"column":3,"nodeType":"59","messageId":"60","endLine":12,"endColumn":14},{"ruleId":"57","severity":1,"message":"70","line":3,"column":18,"nodeType":"59","messageId":"60","endLine":3,"endColumn":29},{"ruleId":"57","severity":1,"message":"71","line":3,"column":31,"nodeType":"59","messageId":"60","endLine":3,"endColumn":41},{"ruleId":"74","severity":1,"message":"75","line":19,"column":20,"nodeType":"76","messageId":"77","endLine":19,"endColumn":22},{"ruleId":"80","severity":1,"message":"81","line":37,"column":9,"nodeType":"82","endLine":37,"endColumn":28},"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","'Register' is defined but never used.","'Router' is defined but never used.","'Routes' is defined but never used.","'Route' is defined but never used.","'useNavigate' is defined but never used.","no-native-reassign",["83"],"no-negated-in-lhs",["84"],"'FormControl' is defined but never used.","'InputGroup' is defined but never used.","'useHistory' is defined but never used.","'withRouter' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useLocation' is defined but never used.","'ReactDOM' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]